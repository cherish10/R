magnitudegrop
xyplot(mag ~ depth|depthgroup * magnitudegrop,data= quakes,
main = "Fiji Earthquakes",
ylab="latitude",xlab="longitde",
pch="@",col=c("red","blue"))
library(DBI)
library(rJava)
library(RJDBC)
Sys.setenv(JAVA_HOME = "C:/Program Files/Java/jdk-15.0.1")
drv <-JDBC("oracle.jdbc.driver.OracleDriver",
"C:/oraclexe/app/oracle/product/11.2.0/server/jdbc/lib/ojdbc6_g.jar")
conn<-dbConnect(drv,
"jdbc:oracle:thin:@//127.0.0.1:1521/xe","dda","0258")
query = "SELECT * FROM Customer"
dbGetQuery(conn,query)
query = "CustomerID"
query = "CustomerID * FROM order_table"
dbSendUpdate(conn,query)
query = "CustomerID * FROM Customer"
dbSendUpdate(conn,query)
query = "SELECT * FROM order_table"
dbGetQuery(conn,query)
query = "customerID"
query = "insert into order_table("customerID")"
query = "insert into order_table('customerID')"
dbSendQuery(conn,query)
library(KoNLP)
library(KoNLP)
install.packages("RSQLite")
install.packages("KoNLP")
install.packages("http://cran.rstudio.com/bin/windows/contrib/3.4/KoNLP_0.80.1.zip",
repos = NULL)
install.packages("Sejong")
install.packages("Sejong")
install.packages("wordcloud")
install.packages("tm")
library(KoNLP)
install.packages("RSQLite")
library(KoNLP)
library(tm)
library(wordcloud)
facebook<-file("C:/Users/user/Desktop/Rcs/Rwork-2nd/Part-II/facebook_bigdata.txt",
encoding = "UTF-8")
facebook_data <- readLines(facebook)
head(facebook_data)
user_dic<-data.frame(term=c("R프로그래밍","페이스북","김진성","소셜네크워크"),
tag = 'ncn')
buildDictionary(ext_dic = 'sejong',user_dic=user_dic)
facebook_nouns<-sapply(facebook_data,exNouns)
exNouns<-function(x){paste(extractNoun(as.character(x)),collapse = " ")}
facebook_nouns<-sapply(facebook_data,exNouns)
exNouns<-function(x){paste(extractNoun(as.character(x)),collapse = " ")}
facebook_nouns<-sapply(facebook_data,exNouns)
myCorpus<-Corpus(VectorSource(facebook_nouns))
library(KoNLP)
install.packages("hash")
install.packages("tau")
install.packages("devtools")
library(KoNLP)
install.packages("rjava")
install.packages("rJava")
library(KoNLP)
library(rJava)
library(RJDBC)
install.packages("RJDBC")
library(KoNLP)
facebook<-file("C:/Users/user/Desktop/Rcs/Rwork-2nd/Part-II/facebook_bigdata.txt",
encoding = "UTF-8")
facebook_data <- readLines(facebook)
head(facebook_data)
user_dic<-data.frame(term=c("R프로그래밍","페이스북","김진성","소셜네크워크"),
tag = 'ncn')
buildDictionary(ext_dic = 'sejong',user_dic=user_dic)
paste(extractNoun(
'김진성은 많은 사람과 소통을 위해서 소셜네크워크에 가입하였습니다'),
collapse = "")
exNouns<-function(x){paste(extractNoun(as.character(x)),collapse = " ")}
facebook_nouns<-sapply(facebook_data,exNouns)
myCorpus<-Corpus(VectorSource(facebook_nouns))
myCorpus
exNouns<-function(x){paste(extractNoun(as.character(x)),collapse = " ")}
facebook_nouns<-sapply(facebook_data,exNouns)
facebook_nouns[1]
myCorpus<-Corpus(VectorSource(facebook_nouns))
myCorpus
myCorpusPrepro<-tm_map(myCorpus,removePunctuation)
myCorpusPrepro<-tm_map(myCorpusPrepro,removeNumbers)
myCorpusPrepro<-tm_map(myCorpusPrepro,tolower)
myCorpusPrepro<-tm_map(myCorpusPrepro,removeWords,stopwords('english'))
inspect(myCorpusPrepro[1:5])
myCorpusPrepro_term<-
TermDocumentMatrix(myCorpusPrepro,
control = list(wordLenghts = c(4,16)))
myCorpusPrepro_term
myTerm_df<-as.data.frame(as.matrix(myCorpusPrepro_term))
dim(myTerm_df)
wordResult<-sort(rowSums(myTerm_df),decreasing = TRUE)
wordResult[1:10]
myCorpusPrepro<-tm_map(myCorpus,removePunctuation)
myCorpusPrepro<-tm_map(myCorpusPrepro,tolower)
myStopwords = c(stopwords('english'),"사용","하기");
myCorpusPrepro<-tm_map(myCorpusPrepro,removeWords,myStopwords)
myCorpusPrepro_term<-
TermDocumentMatrix(myCorpusPrepro,
control = list(wordLenghts = c(4,16)))
myTerm_df<-as.data.frame(as.matrix(myCorpusPrepro_term))
wordResult<-sort(rowSums(myTerm_df),decreasing = TRUE)
wordResult
myName<- names(wordResult)
word.df<-data.frame(word=myName,freq = wordResult)
str(word.df)
pal<-brewer.pal(12,"paired")
pal<-brewer.pal(12,"Paired")
wordcloud(word.df$word,word.df$freq,scale = c(5,1),
min.freq = 3,random.order = F,
rot.per = .1, colors = pal,family="malgun")
marketing<-file("C:/Users/user/Desktop/Rcs/Rwork-2nd/Part-II/marketing.txt",
encoding = "UTF-8")
marketing2 <-readLines(marketing)
close(marketing)
head(marketing)
head(marketing2)
lword<-map(extractNoun,marketing2)
lword<-Map(extractNoun,marketing2)
length(lword)
lword<-unique(lword)
lenght(lword)
length(lword)
lword <-sapply(lword,unique)
length(lword)
lword
filter1<-function(x){
nchar(x)<= 4 && nchar(x) >=2 && is.hangul(x)
}
filter2<-function(x){Filter(filter1,x)}
lword<-sapply(lword,filter2)
lword
word <- list(c("홍길동","이순","만기","김"),
c("대한민국","우리나라대한민국","한국","resu"))
class(word)
filter1 <-function(x){
nchar(x) <=4 && nchar(x) >= 2 && is.hangul(x)
}
filter2 <-function(x){
Filter(filter1,x)
}
filterword <- sapply(word,filter2)
filterword
wordtran<-as(lword,"tranctions")
install.packages("arules")
library(arules)
wordtran<-as(lword,"tranctions")
wordtran<-as(lword,"transactions")
wordtran
tranrules<-apriori(wordtran,
parameter = list(supp=0.25,conf = 0.05))
inspect(tranrules)
data("Adult")
Adult
str(Adult)
dim(Adult)
inspect(Adult)
aprl<-apriori(Adult,
parameter = list(support= 0.1, target="frequent"),
appearance = list(none=
c("income=small","income=large"),
default="both"))
aprl
inspect(aprl)
apr2 <-apriori(Adult,
parameter = list(support=0.1,targer="rules"),
appearance = list(none=
c("income=small","income=large"),
default="both"))
apr2 <-apriori(Adult,
parameter = list(support=0.1,target="rules"),
appearance = list(none=
c("income=small","income=large"),
default="both"))
apr2
apr3 <-apriori(Adult,
parameter = list(supp=0.5, conf= 0.9, target="rules"),
appearance = list(none=
c("income=small","income=large"),
default="both"))
apr3
data("Adult")
rules<-apriori(Adult)
inspect(rules[10])
rules<-labels(tranrules,ruleSep=" ")
rules
rules<-sapply(rules,strsplit," ",USE.NAMES = F)
rules
rulemat<-do.call("rbind",rules)
class(rulemat)
ruleg<-graph.edgelist(rulemat[c(12:59),],directed = F)
install.packages("igraph")
library(igraph)
ruleg<-graph.edgelist(rulemat[c(12:59),],directed = F)
ruleg
plot.igraph(ruleg,vertex,label = V(ruleg)$name,
vertex.label.cex = 1.2, vertex.label.color='black',
vertex,size = 20, vertex.color='green',
vertex.frame.color = 'blue')
plot.igraph(ruleg,vertex.label = V(ruleg)$name,
vertex.label.cex = 1.2, vertex.label.color='black',
vertex.size = 20, vertex.color='green',
vertex.frame.color = 'blue')
vertex.frame.color = "red')
vertex.frame.color = "blue')
vertex.frame.color = "blue')
plot.igraph(ruleg,vertex.label = V(ruleg)$name,
vertex.label.cex = 1.2, vertex.label.color='black',
vertex.size = 20, vertex.color='green',
vertex.frame.color = "blue')
plot.igraph(ruleg,vertex.label = V(ruleg)$name,
vertex.label.cex = 1.2, vertex.label.color='black',
vertex.size = 20, vertex.color='green',
vertex.frame.color = "blue")
plot.igraph(ruleg,vertex.label = V(ruleg)$name,
vertex.label.cex = 1.2, vertex.label.color='black',
vertex.size = 20, vertex.color='green',
vertex.frame.color = "red")
s1<-c(1,2,1,2,3,4,2,3,4,5)
s2<-c(1,3,1,2,3,4,2,4,3,4)
s3<-c(2,3,2,3,2,3,5,3,4,2)
s4<-C(2,4,2,3,2,3,5,3,4,1)
S5<-C(4,5,4,5,2,1,5,2,4,3)
S6<-C(4,3,4,4,2,1,5,2,4,2)
s1<-c(1,2,1,2,3,4,2,3,4,5)
s2<-c(1,3,1,2,3,4,2,4,3,4)
s3<-c(2,3,2,3,2,3,5,3,4,2)
s4<-C(2,4,2,3,2,3,5,3,4,1)
S5<-C(4,5,4,5,2,1,5,2,4,3)
s1<-c(1,2,1,2,3,4,2,3,4,5)
s2<-c(1,3,1,2,3,4,2,4,3,4)
s3<-c(2,3,2,3,2,3,5,3,4,2)
s4<-C(2,4,2,3,2,3,5,3,4,1)
S6<-C(4,3,4,4,2,1,5,2,4,2)
name<-1:10
subject<-data.frame(s1,s2,s3,s4,s5,s6)
s1<-c(1,2,1,2,3,4,2,3,4,5)
s2<-c(1,3,1,2,3,4,2,4,3,4)
s3<-c(2,3,2,3,2,3,5,3,4,2)
s4<-C(2,4,2,3,2,3,5,3,4,1)
S5<-C(4,5,4,5,2,1,5,2,4,3)
S6<-C(4,3,4,4,2,1,5,2,4,2)
name<-1:10
subject<-data.frame(s1,s2,s3,s4,s5,s6)
str(subject)
pc<-prcomp(subject)
summary(pc)
plot(pc)
en<-eigen(cor(subject))
names(en)
en$values
en$vectors
plot(en$values,type="o")
s4<-C(2,4,2,3,2,3,5,3,4,1)
s4<-C(2,4,2,3,2,3,5,3,4,1)
s1<-c(1,2,1,2,3,4,2,3,4,5)
s2<-c(1,3,1,2,3,4,2,4,3,4)
s3<-c(2,3,2,3,2,3,5,3,4,2)
s4<-c(2,4,2,3,2,3,5,3,4,1)
s5<-c(4,5,4,5,2,1,5,2,4,3)
s6<-c(4,3,4,4,2,1,5,2,4,2)
name<-1:10
subject<-data.frame(s1,s2,s3,s4,s5,s6)
str(subject)
pc<-prcomp(subject)
summary(pc)
plot(pc)
en<-eigen(cor(subject))
names(en)
en$values
en$vectors
plot(en$values,type="o")
cor(subject)
result<-factanal(subject,factors = 2,rotation = "varimax")
result
result<-factanal(subject,
factors = 3,
rotation = "varimax",
scores = "regression")
result
attributes(result)
result$loadings
print(result,digits=2,cutoff=0.5)
print(reasult$loadings,cutoff=0)
print(result$loadings,cutoff=0)
plot(result$scores[,c(1:2)],
main = "Factor1과 Factor2 요인점수 행렬")
text(result$scores[,1],result$scores[,2],
labels = name,cex = 0.7,pos = 3,vol"blue")
text(result$scores[,1],result$scores[,2],
labels = name,cex = 0.7,pos = 3,col="blue")
points(result$loadings[,c(1:2)],pch=19,col="red")
text(result$loadings[,1],result$loadings[,2],
labels = rownames(result$loadings),
cex = 0.8,pos = 3,col="red")
plot(result$scores[,c(1,3)],
main = "Factor1과Factor3 요인점수 행렬")
text(result$scores[,1],result$scores[,3],
labels=name,cex = 0.7,pos = 3,col = "blue")
s1<-c(1,2,1,2,3,4,2,3,4,5)
s2<-c(1,3,1,2,3,4,2,4,3,4)
s3<-c(2,3,2,3,2,3,5,3,4,2)
s4<-c(2,4,2,3,2,3,5,3,4,1)
s5<-c(4,5,4,5,2,1,5,2,4,3)
s6<-c(4,3,4,4,2,1,5,2,4,2)
name<-1:10
subject<-data.frame(s1,s2,s3,s4,s5,s6)
str(subject)
pc<-prcomp(subject)
summary(pc)
plot(pc)
en<-eigen(cor(subject))
names(en)
en$values
en$vectors
plot(en$values,type="o")
cor(subject)
result<-factanal(subject,factors = 2,rotation = "varimax")
result
result<-factanal(subject,
factors = 3,
rotation = "varimax",
scores = "regression")
result
attributes(result)
result$loadings
print(result,digits=2,cutoff=0.5)
print(result$loadings,cutoff=0)
plot(result$scores[,c(1:2)],
main = "Factor1과 Factor2 요인점수 행렬")
text(result$scores[,1],result$scores[,2],
labels = name,cex = 0.7,pos = 3,col="blue")
points(result$loadings[,c(1:2)],pch=19,col="red")
text(result$loadings[,1],result$loadings[,2],
labels = rownames(result$loadings),
cex = 0.8,pos = 3,col="red")
plot(result$scores[,c(1,3)],
main = "Factor1과Factor3 요인점수 행렬")
text(result$scores[,1],result$scores[,3],
labels=name,cex = 0.7,pos = 3,col = "blue")
point(result$loadings[,c(1,3)],pch=19,col="red")
points(result$loadings[,c(1,3)],pch=19,col="red")
text(result$loadings[,1],result$loadings[,3],
labels = rownames(result$loadings),
cex = 0.8,pos=3,col = "red")
library(scatterplot3d)
install.packages('memisc')
library(memisc)
setwd("C:/Users/user/Desktop/Rcs/Rwork/Part-III")
data.spss<-as.data.set(spss.system.file('drinking_water.sav'))
data.spss[1:11]
drinking_water<-data.spss[1:11]
drinking_water_df<-as.data.frame(data.spss[1:11])
str(drinking_water_df)
result2<-factanal(drinking_water_df,factors = 3,rotation = "varimax")
result2
dw_df<-drinking_water_df[-4]
str(dw_df)
dim(dw_df)
s<-data.frame(dw_df$Q8,dw_df$Q9,dw_df$Q10,dw_df$Q11)
c<-data.frame(dw_df$Q1,dw_df$Q2,dw_df$Q3)
p<-data.frame(dw_df$Q5,dw_df$Q6,dw_df$Q7)
satisfaction<-round((s$dw_df.Q8+s$dw_df.Q9+s$dw_df.Q10+s$dw_df.Q11)/ncol(s),2)
colseness<-round((c$dw_df.Q1+c$dw_df.Q2+c$dw_df.Q3)/ncol(c),2)
pertinence<-round((p$dw_df.Q5+p$dw_df.Q6+p$dw_df.Q7)/ncol(p),2)
drinking_water_factor_df<-data.frame(satisfaction,closeness,pertinence)
closeness<-round((c$dw_df.Q1+c$dw_df.Q2+c$dw_df.Q3)/ncol(c),2)
drinking_water_factor_df<-data.frame(satisfaction,closeness,pertinence)
colnames(drinking_water_factor_df)<-c("제품만족도","제품친밀도","제품적절성")
cor(drinking_water_factor_df)
install.packages("lattice")
install.packages("lattice")
library(lattice)
head(quakes)
str(quakes)
depthgroup <- equal.count(quakes$depth, number=3,overlap = 0)
depthgroup
magnitudegrop <- equal.count(quakes$mag, number =2, overlap = 0)
magnitudegrop
xyplot(mag ~ depth|depthgroup * magnitudegrop,data= quakes,
main = "Fiji Earthquakes",
ylab="latitude",xlab="longitde",
pch="@",col=c("red","blue"))
library(latticeExtra)
data(SeatacWeather)
str(data)
str(SeatacWeather)
xyplot(min.temp + max.temp ~ day | month,
data=SeatacWeather,type="1",layout=c(3,1))
library(ggplot2)
head(diamonds)
qplot(carat,price,data = diamonds, color=clarity,geom = "line" )
qplot(carat,price,data = diamonds, color=clarity)
qplot(carat,price,data = diamonds, color=clarity,geom = "line",geom_smooth())
qplot(carat,price,data = diamonds, color=clarity,geom = "line")
qplot(geom_smooth())
qplot(carat,price,data = diamonds, color=clarity,geom = "line"+geom_smooth())
qplot(carat,price,data = diamonds, color=clarity,geom = "line")
library(stringr)
region <-uni$학교명
lon<-uni$LON
lat<-uni$LAT
df<-data.frame(region,lon,lat)
df
layer1 <- ggmap(map)
layer1
layer2 <- layer1 + geom_point(data = df,
aes(x = lon, y = lat,
color = factor(region),
size = factor(region)))
layer2
library(ggmap)
seoul<-c(left=126.77,bottom = 37.40,
right = 127.17, top = 37.70)
map <-get_stamenmap(seoul,zoom = 11, maptype = "watercolor")
ggmap(map)
uni<- read.csv(file.choose(),header = T)
library(stringr)
region <-uni$학교명
lon<-uni$LON
lat<-uni$LAT
df<-data.frame(region,lon,lat)
uni<- read.csv(file.choose(),header = T)
library(stringr)
region <-uni$학교명
lon<-uni$LON
lat<-uni$LAT
df<-data.frame(region,lon,lat)
df
layer1 <- ggmap(map)
layer1
layer2 <- layer1 + geom_point(data = df,
aes(x = lon, y = lat,
color = factor(region),
size = factor(region)))
layer2
layer3<- layer2 + geom_text(data = df,
aes(x = lon + 0.01, y = lat + 0.08,
label =  region),size = 3)
layer3
ggsave("university.png",scale=1,width = 10.24, height = 7.68)
install.packages("rJava")
install.packages("DBI")
install.packages("DBI")
install.packages("DBI")
install.packages("RJDBC")
library(DBI)
Sys.setenv(JAVA_HOME = "C//Program Files//Java??jre1.8.0_241")
Sys.setenv(JAVA_HOME = "C//Program Files//Java//jre1.8.0_241")
library(rJava)
library(RJDBC)
Sys.setenv(JAVA_HOME = "C:/Program Files/Java/jdk-15.0.1")
drr <- JDBC(driverClass = "com.mysql.cj.jdbc.Driver",
"C:/Rcs/mysql-connector-java-8.0.23.jar")
conn <- dbConnect(drr,"jdbc:mysql://127.0.0.1:3306/work","dda","0258")
drr <- JDBC(driverClass = "com.mysql.cj.jdbc.Driver",
"C:/Rcs/mysql-connector-java-8.0.23.jar")
Sys.setenv(JAVA_HOME = "C:/Program Files/Java/jdk-15.0.1")
library(rJava)
library(RJDBC)
install.packages("rJava")
library(rJava)
query<-"select * from GoodsInfo"
dbGetQuery(conn,query)
install.packages("MASS")
install.packages("MASS")
library(mass)
library(MASS)
data("Animals")
head(Animals)
summary(Animals$brain)
mean(Animals$brain)
median(Animals$brain)
sd(Animals$brain)
var(Animals$brain)
max(Animals$brain)
min(Animals$brain)
setwd("C:/Users/user/Desktop/Rcs/Rwork/Part-III")
data<-read.csv("descriptive.csv",header = TRUE)
str(data)
type<-data$type
table(type)
barplot(table(type))
pie(table(type))
hist(age,freq=F)
hist(data$age,freq=F)
lines(density(age),col = 'blue')
lines(density(data$age),col = 'blue')
curve(dnorm(x,mean(data$age),sd(data$age),col='red',add=T))
x<-seq(40,70,5)
curve(dnorm(x,mean(data$age),sd(data$age),col='red',add=T))
install.packages("moments")
library(moments)
age<-data$age
skewness(age)
kutosis(age)
kurtosis(age)
hist(age)
hist(age,freq=F)
lines(density(age),col = 'blue')
x<-seq(40,70,5)
curve(dnorm(x,mean(age),sd(age),col='red',add=T))
curve(dnorm(x,mean(age),sd(age),col='red',add=T)
curve(dnorm(x,mean(age),sd(age)),col='red',add=T)
curve(dnorm(x, mean(age), sd(age)), col='red', add = T)
mean(data$age)
sd(data$age)
